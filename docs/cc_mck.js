// Generated by Haxe 4.1.4
(function ($global) { "use strict";
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
};
var Main = function() {
	window.document.addEventListener("DOMContentLoaded",function(event) {
		$global.console.log("" + haxein_App.NAME + " Dom ready :: build: " + "2020-10-02 10:36:53");
		var color0 = { r : Math.round(105), g : Math.round(210), b : Math.round(231)};
		var color1 = { r : Math.round(167), g : Math.round(219), b : Math.round(216)};
		var color2 = { r : Math.round(224), g : Math.round(228), b : Math.round(204)};
		haxe_Log.trace(cc_util_ColorUtil.getColourObj(color0),{ fileName : "src/Main.hx", lineNumber : 27, className : "Main", methodName : "new", customParams : [cc_util_ColorUtil.getColourObj(color1),cc_util_ColorUtil.getColourObj(color2)]});
		var ctx = Sketch.create("creative_code_mck");
		ctx.clearRect(0,0,Global.w,Global.h);
		cc_CanvasTools.backgroundRGB(ctx,color2);
		cc_CanvasTools.fillColourRGB(ctx,color0);
		cc_CanvasTools.strokeColourRGB(ctx,color1);
		cc_CanvasTools.strokeWeight(ctx,10);
		cc_CanvasTools.circleFillStroke(ctx,Global.w * .5,Global.h * .5,Global.w * .4);
	});
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Math.__name__ = true;
var SketchOption = function() {
	this._padding = 20;
	this._scale = false;
	this._type = "canvas";
	this._fullscreen = true;
};
SketchOption.__name__ = true;
SketchOption.prototype = {
	get_width: function() {
		return this._width;
	}
	,set_width: function(value) {
		this._fullscreen = false;
		if(this._height == null) {
			this._height = value;
		}
		return this._width = value;
	}
	,get_height: function() {
		return this._height;
	}
	,set_height: function(value) {
		this._fullscreen = false;
		if(this._width == null) {
			this._width = value;
		}
		return this._height = value;
	}
	,get_fullscreen: function() {
		return this._fullscreen;
	}
	,get_type: function() {
		return this._type;
	}
	,get_scale: function() {
		return this._scale;
	}
	,get_padding: function() {
		return this._padding;
	}
};
var Sketch = function() {
	this.document = window.document;
	this.window = window;
};
Sketch.__name__ = true;
Sketch.create = function(name,opt) {
	if(opt != null) {
		Sketch.option = opt;
	}
	if(Sketch.option.get_type() == "canvas") {
		return new Sketch().createCanvas(name);
	} else {
		return new Sketch().createGLCanvas(name);
	}
};
Sketch.prototype = {
	createCanvas: function(name) {
		var body = this.document.querySelector("body");
		if(this.document.getElementById("canvas-wrapper") != null) {
			var element = this.document.getElementById("canvas-wrapper");
			element.parentNode.removeChild(element);
			this.window.addEventListener(Global.RESIZE,null,false);
			this.window.addEventListener(Global.MOUSE_MOVE,null,false);
			this.window.addEventListener(Global.MOUSE_DOWN,null,false);
			this.window.addEventListener(Global.MOUSE_UP,null,false);
			this.window.addEventListener(Global.KEY_DOWN,null,false);
		}
		var container = this.document.createElement("div");
		container.setAttribute("id","canvas-wrapper");
		container.className = "canvas-wrapper-container";
		this.canvas = this.document.createElement("canvas");
		this.canvas.setAttribute("id",name);
		body.appendChild(container);
		container.appendChild(this.canvas);
		this.ctx = this.canvas.getContext("2d");
		new Sketch().init(this.ctx);
		this.onResizeHandler();
		this.window.addEventListener(Global.RESIZE,$bind(this,this.onResizeHandler),false);
		return this.ctx;
	}
	,createGLCanvas: function(name) {
		return null;
	}
	,onResizeHandler: function() {
		var c = this.document.getElementsByTagName("canvas");
		if(Sketch.option == null) {
			return;
		}
		if(Sketch.option.get_fullscreen()) {
			Global.w = this.window.innerWidth;
			Global.h = this.window.innerHeight;
			Sketch.option.set_width(Global.w);
			Sketch.option.set_height(Global.h);
		} else {
			Global.w = Sketch.option.get_width();
			Global.h = Sketch.option.get_height();
		}
		var _g = 0;
		var _g1 = c.length;
		while(_g < _g1) {
			var i = _g++;
			var _c = c[i];
			if(Sketch.option.get_scale()) {
				var padding = Sketch.option.get_padding();
				var scaleX = (this.window.innerWidth - 2 * padding) / Global.w;
				var scaleY = (this.window.innerHeight - 2 * padding) / Global.h;
				var scale = Math.min(scaleX,scaleY);
				var tmp = "" + Sketch.option.get_width() * scale;
				_c.style.width = tmp + "px";
				var tmp1 = "" + Sketch.option.get_height() * scale;
				_c.style.height = tmp1 + "px";
			}
			if(_c.id.indexOf("hiddencanvas-") != -1) {
				continue;
			}
			_c.width = Global.w;
			_c.height = Global.h;
		}
		$global.console.log("RESIZE :: w=" + Global.w + " , h=" + Global.h);
	}
	,init: function(ctx) {
		var _gthis = this;
		this.window.addEventListener(Global.MOUSE_MOVE,function(e) {
			Global.mouseX = e.clientX;
			Global.mouseY = e.clientY;
			Global.mouseMoved = true;
		});
		this.window.addEventListener(Global.MOUSE_DOWN,function(e) {
			Global.mouseDown = true;
		});
		this.window.addEventListener(Global.MOUSE_UP,function(e) {
			Global.mouseDown = false;
		});
		this.window.addEventListener(Global.KEY_DOWN,function(e) {
			if(e.metaKey == true && e.key == "r") {
				haxe_Log.trace("cmd + r",{ fileName : "Sketch.hx", lineNumber : 198, className : "Sketch", methodName : "init"});
				$global.location.reload();
			}
			if(e.metaKey == true && e.key == "s" && e.shiftKey == false) {
				e.preventDefault();
				e.stopPropagation();
				haxe_Log.trace("cmd + s",{ fileName : "Sketch.hx", lineNumber : 204, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImageBg(ctx,true);
			}
			if(e.metaKey == true && e.key == "s" && e.shiftKey == true) {
				e.preventDefault();
				e.stopPropagation();
				haxe_Log.trace("cmd + shift + s",{ fileName : "Sketch.hx", lineNumber : 210, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.downloadImage(ctx,false);
			}
			if(e.metaKey == true && (e.code == "KeyS" && e.altKey == true)) {
				e.preventDefault();
				e.stopPropagation();
				haxe_Log.trace("cmd + alt + s",{ fileName : "Sketch.hx", lineNumber : 216, className : "Sketch", methodName : "init"});
				cc_tool_ExportFile.onBase64Handler(ctx,true);
			}
			if(e.metaKey == true && e.key == "f") {
				if(!Global.isFullscreen) {
					_gthis.openFullscreen();
					Global.isFullscreen = true;
				} else {
					_gthis.closeFullscreen();
					Global.isFullscreen = false;
				}
			}
		},false);
	}
	,openFullscreen: function() {
		var elem = this.document.documentElement;
		if(elem.requestFullscreen != null) {
			elem.requestFullscreen();
		} else if(elem.mozRequestFullScreen) {
			elem.mozRequestFullScreen();
		} else if(elem.webkitRequestFullscreen) {
			elem.webkitRequestFullscreen();
		} else if(elem.msRequestFullscreen) {
			elem.msRequestFullscreen();
		}
	}
	,closeFullscreen: function() {
		if(this.document.exitFullscreen != null) {
			this.document.exitFullscreen();
		} else if(this.document.mozCancelFullScreen) {
			this.document.mozCancelFullScreen();
		} else if(this.document.webkitExitFullscreen) {
			this.document.webkitExitFullscreen();
		} else if(this.document.msExitFullscreen) {
			this.document.msExitFullscreen();
		}
	}
};
var Global = function() { };
Global.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var cc_CanvasTools = function() { };
cc_CanvasTools.__name__ = true;
cc_CanvasTools.makeCircle = function(ctx,x,y,radius) {
	ctx.beginPath();
	ctx.arc(x,y,radius,0,Math.PI * 2,true);
};
cc_CanvasTools.circleFillStroke = function(ctx,x,y,radius) {
	cc_CanvasTools.makeCircle(ctx,x,y,radius);
	ctx.fill();
	ctx.stroke();
	ctx.closePath();
};
cc_CanvasTools.strokeWeight = function(ctx,inPx) {
	ctx.lineWidth = inPx;
};
cc_CanvasTools.fillColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.colour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.colour = function(ctx,r,g,b,a) {
	var c = cc_util_ColorUtil.getColour(r,g,b,a);
	ctx.fillStyle = c;
};
cc_CanvasTools.strokeColourRGB = function(ctx,rgb,a) {
	cc_CanvasTools.lineColour(ctx,rgb.r,rgb.g,rgb.b,a);
};
cc_CanvasTools.lineColour = function(ctx,r,g,b,a) {
	ctx.strokeStyle = cc_util_ColorUtil.getColour(r,g,b,a);
};
cc_CanvasTools.background = function(ctx,r,g,b,a) {
	if(g == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		ctx.fillStyle = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		ctx.fillStyle = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	ctx.fillRect(0,0,Global.w,Global.h);
};
cc_CanvasTools.backgroundRGB = function(ctx,rgb) {
	cc_CanvasTools.background(ctx,rgb.r,rgb.g,rgb.b);
};
var cc_tool_ExportFile = function() { };
cc_tool_ExportFile.__name__ = true;
cc_tool_ExportFile.downloadImage = function(ctx,isJpg,fileName) {
	if(isJpg == null) {
		isJpg = false;
	}
	if(fileName == null) {
		var hash = $global.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var link = window.document.createElement("a");
	link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	link.download = fileName;
	link.click();
};
cc_tool_ExportFile.onBase64Handler = function(ctx,isJpg) {
	if(isJpg == null) {
		isJpg = false;
	}
	var base64 = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
	cc_tool_ExportFile.clipboard(base64);
};
cc_tool_ExportFile.clipboard = function(text) {
	var win = "Ctrl+C";
	var mac = "Cmd+C";
	var copyCombo = win;
	var userAgent = $global.navigator.userAgent;
	var ereg = new EReg("iPhone|iPod|iPad|Android|BlackBerry","i");
	var ismac = ereg.match(userAgent);
	if(ismac) {
		copyCombo = mac;
	}
	window.prompt("Copy to clipboard: " + copyCombo + ", Enter",text);
};
cc_tool_ExportFile.downloadImageBg = function(ctx,isJpg,fileName,isTransparant) {
	if(isTransparant == null) {
		isTransparant = false;
	}
	if(isJpg == null) {
		isJpg = false;
	}
	haxe_Log.trace(ctx,{ fileName : "cc/tool/ExportFile.hx", lineNumber : 128, className : "cc.tool.ExportFile", methodName : "downloadImageBg", customParams : [isJpg,fileName,isTransparant]});
	var canvas = ctx.canvas;
	var ext = isJpg ? "jpg" : "png";
	if(fileName == null) {
		var hash = $global.location.hash;
		hash = StringTools.replace(hash,"#","").toLowerCase();
		if(hash == "") {
			hash = "image";
		}
		fileName = "" + hash + "-" + new Date().getTime();
	}
	var w = canvas.width;
	var h = canvas.height;
	var compositeOperation;
	var data = ctx.getImageData(0,0,w,h);
	if(!isTransparant) {
		compositeOperation = ctx.globalCompositeOperation;
		ctx.globalCompositeOperation = "destination-over";
		ctx.fillStyle = "#ffffff";
		ctx.fillRect(0,0,w,h);
		var imageData = canvas.toDataURL("image/png");
		ctx.clearRect(0,0,w,h);
		ctx.putImageData(data,0,0);
		ctx.globalCompositeOperation = compositeOperation;
	}
	var link = window.document.createElement("a");
	link.style.cssText = "display:none";
	link.download = fileName + ("." + ext);
	if(!HTMLCanvasElement.prototype.toBlob) {
		haxe_Log.trace("There is no blob",{ fileName : "cc/tool/ExportFile.hx", lineNumber : 187, className : "cc.tool.ExportFile", methodName : "downloadImageBg"});
		link.href = ctx.canvas.toDataURL(isJpg ? "image/jpeg" : "",1);
		link.click();
		link.remove();
	} else {
		haxe_Log.trace("Attack of the blob",{ fileName : "cc/tool/ExportFile.hx", lineNumber : 193, className : "cc.tool.ExportFile", methodName : "downloadImageBg"});
		ctx.canvas.toBlob(function(blob) {
			link.href = URL.createObjectURL(blob);
			link.click();
			link.remove();
		},isJpg ? "image/jpeg" : "",1);
	}
	window.document.body.appendChild(link);
};
var cc_util_ColorUtil = function() { };
cc_util_ColorUtil.__name__ = true;
cc_util_ColorUtil.getColour = function(r,g,b,a) {
	var c;
	if(g == null) {
		c = cc_util_ColorUtil.rgb(r,r,r);
	} else if(b == null && a == null) {
		c = cc_util_ColorUtil.rgba(r,r,r,g);
	} else if(a == null) {
		c = cc_util_ColorUtil.rgb(r,g,b);
	} else {
		c = cc_util_ColorUtil.rgba(r,g,b,a);
	}
	return c;
};
cc_util_ColorUtil.getColourObj = function(rgb,a) {
	return cc_util_ColorUtil.getColour(rgb.r,rgb.g,rgb.b,a);
};
cc_util_ColorUtil.rgb = function(r,g,b) {
	if(g == null) {
		g = r;
	}
	if(b == null) {
		b = r;
	}
	return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ")";
};
cc_util_ColorUtil.rgba = function(r,g,b,a) {
	if(g == null) {
		return "rgb(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ")";
	} else if(b == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(g,0,1) + ")";
	} else if(a == null) {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", 1)";
	} else {
		return "rgba(" + cc_util_MathUtil.clamp(Math.round(r),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(g),0,255) + ", " + cc_util_MathUtil.clamp(Math.round(b),0,255) + ", " + cc_util_MathUtil.clamp(a,0,1) + ")";
	}
};
var cc_util_MathUtil = function() { };
cc_util_MathUtil.__name__ = true;
cc_util_MathUtil.clamp = function(value,min,max) {
	return Math.min(Math.max(value,Math.min(min,max)),Math.max(min,max));
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var haxein_App = function() { };
haxein_App.__name__ = true;
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = "Date";
js_Boot.__toStr = ({ }).toString;
Sketch.option = new SketchOption();
Global.MOUSE_DOWN = "mousedown";
Global.MOUSE_UP = "mouseup";
Global.MOUSE_MOVE = "mousemove";
Global.KEY_DOWN = "keydown";
Global.RESIZE = "resize";
Global.isFullscreen = false;
haxein_App.NAME = "[cc-haxein2020-creative-coding]";
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=cc_mck.js.map